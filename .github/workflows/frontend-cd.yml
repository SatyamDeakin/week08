name: Frontend CD (AKS)

on:
  push:
    branches: [ development, main ]
    paths:
      - 'frontend/**'
      - 'k8s/**'
      - '.github/workflows/frontend-cd.yml'
  workflow_dispatch:

concurrency:
  group: frontend-cd-${{ github.ref }}
  cancel-in-progress: true

env:
  AKS_RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }}
  AKS_CLUSTER_NAME:   ${{ secrets.AKS_CLUSTER_NAME }}
  ACR_NAME:           ${{ secrets.ACR_NAME }}
  ACR_LOGIN_SERVER:   ${{ secrets.ACR_LOGIN_SERVER }}
  # derive environment/namespace from branch
  ENV_NAME:           ${{ github.ref_name == 'main' && 'prod' || 'dev' }}
  NAMESPACE:          ${{ github.ref_name == 'main' && 'prod' || 'dev' }}
  IMAGE:              ${{ secrets.ACR_LOGIN_SERVER }}/my-frontend:${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ env.ENV_NAME }}   # prod can be approval-gated; dev usually open
    permissions: { id-token: write, contents: read }
    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
          cluster-name:   ${{ env.AKS_CLUSTER_NAME }}

      - name: Ensure namespace
        run: kubectl get ns "${{ env.NAMESPACE }}" || kubectl create ns "${{ env.NAMESPACE }}"

      - name: Wait for image in ACR (avoid race with CI)
        shell: bash
        run: |
          for i in {1..12}; do
            if az acr repository show-manifests --name "${{ env.ACR_NAME }}" --repository my-frontend \
              --query "[?tags && contains(join(',', tags), '${{ github.sha }}')]" -o tsv | head -n1 | grep -q .; then
              echo "Image found"; break
            fi
            echo "Waiting for image... ($i/12)"; sleep 10
          done

      - name: Update image in manifest
        run: sed -i "s#image: .*/my-frontend:.*#image: ${{ env.IMAGE }}#g" k8s/frontend-deployment.yaml

      - name: Apply manifests
        run: |
          kubectl -n "${{ env.NAMESPACE }}" apply -f k8s/frontend-deployment.yaml
          kubectl -n "${{ env.NAMESPACE }}" apply -f k8s/frontend-service.yaml
          [ -f k8s/frontend-ingress.yaml ] && kubectl -n "${{ env.NAMESPACE }}" apply -f k8s/frontend-ingress.yaml

      - name: Rollout status
        run: kubectl -n "${{ env.NAMESPACE }}" rollout status deploy/my-frontend --timeout=240s

      - name: Logout Azure
        if: always()
        run: az logout
